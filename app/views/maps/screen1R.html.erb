<div id="map3d"></div>
<style>
    #map3d {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        margin: 0;
        overflow: hidden;
        padding: 0;
        font-family: sans-serif;
    }

    #map3d .cesium-viewer-infoBoxContainer {
        width: 60px;
    }

    #map3d .cesium-infoBox {
        height: 14px;
        top: 0;
        left: 0;
    }
</style>
<script type="text/javascript">
  var viewer = new Cesium.Viewer('map3d', {
    geocoder: false,
    homeButton: false,
    sceneModePicker: false,
    baseLayerPicker: false,
    navigationHelpButton: false,
    animation: false,
    timeline: false,
    selectionIndicator: false
  });

  drawLayer();

  // Set up Google Earth
  // setupGE();
  // Initialize map will be called after GE is ready...put anything here that you want to happen the first time the plugin loads
  function initializeMap() {
    // add controls (navigation / zoom)
    ge.getNavigationControl().setVisibility(ge.VISIBILITY_SHOW);
    drawLayer();
  }

  function drawLayer(MPstring, APstring, CAstring, CDstring, FilterString) {
    // define / link 3-digit ZIP code KML
    // var USA_link = ge.createLink('');
    if (MPstring && APstring && CAstring && CDstring && FilterString) {
      var temp = "http://<%= $serverURL %>:3000/variables/<%= params.has_key?(:colors_array) ? params[:colors_array] : "0" %>/get_map_KML_DB/" + MPstring + "/" + APstring + "/" + CAstring + "/" + CDstring + "/" + FilterString + "/";
      var USA_href = temp;
    } else {
      var USA_href = "http://<%= $serverURL %>:3000/variables/<%= params.has_key?(:colors_array) ? params[:colors_array] : "0" %>/get_map_KML_DB.kml";
    }

    viewer.dataSources.add(Cesium.KmlDataSource.load(USA_href), {
         camera: viewer.scene.camera,
         canvas: viewer.scene.canvas
     })
    .then(function(dataSource) {
        $.get(USA_href, function(data) {
            renderScreenOverlay(viewer, data);
        });
        viewer.flyTo(dataSource.entities);
    });

    //click listener
    function clickListener(event){
        var handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);
        handler.setInputAction(function(click){
            if ($(".cesium-infoBox")) {
                $(".cesium-infoBox >div").remove();
            };
            //set infoBox position and add arrow to infoBox
            var pickedObject = viewer.scene.pick(click.position);
            if (Cesium.defined(pickedObject)) {
                $(".cesium-viewer-infoBoxContainer").offset({ top: click.position.y-42, left: click.position.x-14 });
                $(".cesium-infoBox-iframe").contents().find("head").append($("<style type='text/css'>  .cesium-infoBox-description{padding:0px 0px; margin-right:0px; font-size:small;}  </style>"));
                $(".cesium-viewer-infoBoxContainer").append("<div class='arrow-down' style='position: absolute; width:0px; height:0px; border-left:28px solid transparent; border-right: 28px solid transparent; border-top: 28px solid #FFF; font-size: 0px; line-height: 0px; margin: 14px -14px;'></div>");
            }
        }, Cesium.ScreenSpaceEventType.LEFT_CLICK);
    }

      clickListener();
  }


  // WebSocket Variables and Methods Hash
  var ws = new WebSocket('ws://<%= $serverURL %>:5555');
  var methods = {
    "updateMapKML" : updateMapKML,
    "statusMessage" : statusMessage // found in websockets.js
  };

  $(document).ready(function(){
    amplify.store.sessionStorage('screenID', 'screen1R');
    setupWebSocket();
  });

</script>